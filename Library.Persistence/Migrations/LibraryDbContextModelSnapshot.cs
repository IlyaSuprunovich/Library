// <auto-generated />
using System;
using Library.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Library.Persistence.Migrations
{
    [DbContext(typeof(LibraryDbContext))]
    partial class LibraryDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Library.Domain.Entities.Author", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5ab71203-e9c7-42f3-905f-63c780c12611"),
                            Country = "Russia",
                            DateOfBirth = new DateTime(1828, 9, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Lev",
                            Surname = "Tolstoy"
                        },
                        new
                        {
                            Id = new Guid("e9e99f1f-ba87-40ee-9093-a06dc4140831"),
                            Country = "Russia",
                            DateOfBirth = new DateTime(1821, 11, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Fyodor",
                            Surname = "Dostoevsky"
                        },
                        new
                        {
                            Id = new Guid("aa4ae982-75f4-400f-9ed3-b0d11c3523e2"),
                            Country = "Russia",
                            DateOfBirth = new DateTime(1860, 1, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Anton",
                            Surname = "Chekhov"
                        },
                        new
                        {
                            Id = new Guid("2fafcf8b-75a9-4c61-b3ed-be974319b076"),
                            Country = "Russia",
                            DateOfBirth = new DateTime(1799, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Alexander",
                            Surname = "Pushkin"
                        },
                        new
                        {
                            Id = new Guid("24a6d8d9-df41-4380-b109-d83f60aac625"),
                            Country = "Russia",
                            DateOfBirth = new DateTime(1891, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Mikhail",
                            Surname = "Bulgakov"
                        });
                });

            modelBuilder.Entity("Library.Domain.Entities.Book", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("AuthorId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Genre")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("ISBN")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<Guid?>("ImageId")
                        .HasColumnType("char(36)");

                    b.Property<bool?>("IsBookInLibrary")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(true);

                    b.Property<Guid?>("LibraryUserId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<DateTime?>("TimeOfReturn")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("TimeOfTake")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("ImageId");

                    b.HasIndex("LibraryUserId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e2a6d4fd-8c3a-4b89-9fe7-9c80d9d5e9c2"),
                            AuthorId = new Guid("5ab71203-e9c7-42f3-905f-63c780c12611"),
                            Description = "A novel that intertwines the lives of private and public individuals during the time of the Napoleonic wars.",
                            Genre = "Novel",
                            ISBN = "9781566190275",
                            ImageId = new Guid("60d8c1b4-eb78-4ab6-b283-30fd4f267c11"),
                            IsBookInLibrary = false,
                            LibraryUserId = new Guid("4ec7a303-11f5-46d0-a1e4-8987b9aba75b"),
                            Name = "War and Peace"
                        },
                        new
                        {
                            Id = new Guid("1a7d9b8d-6c8f-4db0-8d7b-9d9b7c0f7c2d"),
                            AuthorId = new Guid("5ab71203-e9c7-42f3-905f-63c780c12611"),
                            Description = "A complex novel in eight parts, with more than a dozen major characters, it deals with themes of betrayal, faith, family, marriage, Imperial Russian society, desire, and rural vs. city life.",
                            Genre = "Novel",
                            ISBN = "9780143035008",
                            ImageId = new Guid("60d8c1b4-eb78-4ab6-b283-30fd4f267c12"),
                            IsBookInLibrary = false,
                            LibraryUserId = new Guid("2f155e1a-d652-4a4c-b799-4d7653cdb27e"),
                            Name = "Anna Karenina"
                        },
                        new
                        {
                            Id = new Guid("e9e99f1f-ba87-40ee-9093-a06dc4140832"),
                            AuthorId = new Guid("e9e99f1f-ba87-40ee-9093-a06dc4140831"),
                            Description = "A novel about the mental anguish and moral dilemmas of an impoverished ex-student in Saint Petersburg who formulates a plan to kill an unscrupulous pawnbroker for her money.",
                            Genre = "Novel",
                            ISBN = "9780140449136",
                            ImageId = new Guid("60d8c1b4-eb78-4ab6-b283-30fd4f267c13"),
                            Name = "Crime and Punishment"
                        },
                        new
                        {
                            Id = new Guid("e2a6d4fd-8c3a-4b89-9fe7-9c80d9d5e9c3"),
                            AuthorId = new Guid("e9e99f1f-ba87-40ee-9093-a06dc4140831"),
                            Description = "A passionate philosophical novel that enters deeply into the ethical debates of God, free will, and morality.",
                            Genre = "Novel",
                            ISBN = "9780374528379",
                            ImageId = new Guid("60d8c1b4-eb78-4ab6-b283-30fd4f267c14"),
                            Name = "The Brothers Karamazov"
                        },
                        new
                        {
                            Id = new Guid("1a7d9b8d-6c8f-4db0-8d7b-9d9b7c0f7c2e"),
                            AuthorId = new Guid("aa4ae982-75f4-400f-9ed3-b0d11c3523e2"),
                            Description = "A play that deals with lost opportunities and unrequited love.",
                            Genre = "Play",
                            ISBN = "9780140449266",
                            ImageId = new Guid("60d8c1b4-eb78-4ab6-b283-30fd4f267c15"),
                            Name = "The Seagull"
                        },
                        new
                        {
                            Id = new Guid("e2a6d4fd-8c3a-4b89-9fe7-9c80d9d5e9c4"),
                            AuthorId = new Guid("aa4ae982-75f4-400f-9ed3-b0d11c3523e2"),
                            Description = "A play that portrays the visit of an elderly professor and his young wife, Yelena, to the rural estate that supports their urban lifestyle.",
                            Genre = "Play",
                            ISBN = "9780199536696",
                            ImageId = new Guid("60d8c1b4-eb78-4ab6-b283-30fd4f267c16"),
                            Name = "Uncle Vanya"
                        },
                        new
                        {
                            Id = new Guid("24a6d8d9-df41-4380-b109-d83f60aac626"),
                            AuthorId = new Guid("2fafcf8b-75a9-4c61-b3ed-be974319b076"),
                            Description = "A novel in verse that is a classic of Russian literature.",
                            Genre = "Novel",
                            ISBN = "9780140448030",
                            ImageId = new Guid("60d8c1b4-eb78-4ab6-b283-30fd4f267c17"),
                            Name = "Eugene Onegin"
                        },
                        new
                        {
                            Id = new Guid("1a7d9b8d-6c8f-4db0-8d7b-9d9b7c0f7c2f"),
                            AuthorId = new Guid("2fafcf8b-75a9-4c61-b3ed-be974319b076"),
                            Description = "A historical novel that depicts the rebellion of Pugachev.",
                            Genre = "Novel",
                            ISBN = "9780199538690",
                            ImageId = new Guid("60d8c1b4-eb78-4ab6-b283-30fd4f267c18"),
                            Name = "The Captain's Daughter"
                        },
                        new
                        {
                            Id = new Guid("e2a6d4fd-8c3a-4b89-9fe7-9c80d9d5e9c5"),
                            AuthorId = new Guid("24a6d8d9-df41-4380-b109-d83f60aac625"),
                            Description = "A novel that combines supernatural elements with satirical dark comedy.",
                            Genre = "Novel",
                            ISBN = "9780141180144",
                            ImageId = new Guid("60d8c1b4-eb78-4ab6-b283-30fd4f267c19"),
                            Name = "The Master and Margarita"
                        },
                        new
                        {
                            Id = new Guid("1a7d9b8d-6c8f-4db0-8d7b-9d9b7c0f7c30"),
                            AuthorId = new Guid("24a6d8d9-df41-4380-b109-d83f60aac625"),
                            Description = "A novel about a scathing satire on Soviet Russia.",
                            Genre = "Novel",
                            ISBN = "9780140455151",
                            ImageId = new Guid("60d8c1b4-eb78-4ab6-b283-30fd4f267c20"),
                            Name = "Heart of a Dog"
                        });
                });

            modelBuilder.Entity("Library.Domain.Entities.Image", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("ContentType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("Images");

                    b.HasData(
                        new
                        {
                            Id = new Guid("60d8c1b4-eb78-4ab6-b283-30fd4f267c11"),
                            ContentType = "image/jpeg",
                            FileName = "war_and_peace.jpeg",
                            Path = "D:\\Программирование\\Library\\Library.Persistence\\Image\\war_and_peace.jpeg"
                        },
                        new
                        {
                            Id = new Guid("60d8c1b4-eb78-4ab6-b283-30fd4f267c12"),
                            ContentType = "image/jpeg",
                            FileName = "anna_karenina.jpeg",
                            Path = "D:\\Программирование\\Library\\Library.Persistence\\Image\\anna_karenina.jpeg"
                        },
                        new
                        {
                            Id = new Guid("60d8c1b4-eb78-4ab6-b283-30fd4f267c13"),
                            ContentType = "image/jpeg",
                            FileName = "crime_and_punishment.jpeg",
                            Path = "D:\\Программирование\\Library\\Library.Persistence\\Image\\crime_and_punishment.jpeg"
                        },
                        new
                        {
                            Id = new Guid("60d8c1b4-eb78-4ab6-b283-30fd4f267c14"),
                            ContentType = "image/jpeg",
                            FileName = "the_brothers_karamazov.jpeg",
                            Path = "D:\\Программирование\\Library\\Library.Persistence\\Image\\the_brothers_karamazov.jpeg"
                        },
                        new
                        {
                            Id = new Guid("60d8c1b4-eb78-4ab6-b283-30fd4f267c15"),
                            ContentType = "image/jpeg",
                            FileName = "the_seagull.jpeg",
                            Path = "D:\\Программирование\\Library\\Library.Persistence\\Image\\the_seagull.jpeg"
                        },
                        new
                        {
                            Id = new Guid("60d8c1b4-eb78-4ab6-b283-30fd4f267c16"),
                            ContentType = "image/jpeg",
                            FileName = "uncle_vanya.jpeg",
                            Path = "D:\\Программирование\\Library\\Library.Persistence\\Image\\uncle_vanya.jpeg"
                        },
                        new
                        {
                            Id = new Guid("60d8c1b4-eb78-4ab6-b283-30fd4f267c17"),
                            ContentType = "image/jpeg",
                            FileName = "eugene_onegin.jpeg",
                            Path = "D:\\Программирование\\Library\\Library.Persistence\\Image\\eugene_onegin.jpeg"
                        },
                        new
                        {
                            Id = new Guid("60d8c1b4-eb78-4ab6-b283-30fd4f267c18"),
                            ContentType = "image/jpeg",
                            FileName = "the_captains_daughter.jpeg",
                            Path = "D:\\Программирование\\Library\\Library.Persistence\\Image\\the_captains_daughter.jpeg"
                        },
                        new
                        {
                            Id = new Guid("60d8c1b4-eb78-4ab6-b283-30fd4f267c19"),
                            ContentType = "image/jpeg",
                            FileName = "the_master_and_margarita.jpeg",
                            Path = "D:\\Программирование\\Library\\Library.Persistence\\Image\\the_master_and_margarita.jpeg"
                        },
                        new
                        {
                            Id = new Guid("60d8c1b4-eb78-4ab6-b283-30fd4f267c20"),
                            ContentType = "image/jpeg",
                            FileName = "heart_of_a_dog.jpeg",
                            Path = "D:\\Программирование\\Library\\Library.Persistence\\Image\\heart_of_a_dog.jpeg"
                        });
                });

            modelBuilder.Entity("Library.Domain.Entities.LibraryUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("LibraryUsers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4ec7a303-11f5-46d0-a1e4-8987b9aba75b")
                        },
                        new
                        {
                            Id = new Guid("2f155e1a-d652-4a4c-b799-4d7653cdb27e")
                        });
                });

            modelBuilder.Entity("Library.Domain.Entities.Book", b =>
                {
                    b.HasOne("Library.Domain.Entities.Author", "Author")
                        .WithMany("Books")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Library.Domain.Entities.Image", "Image")
                        .WithMany()
                        .HasForeignKey("ImageId");

                    b.HasOne("Library.Domain.Entities.LibraryUser", "LibraryUser")
                        .WithMany("TakenBooks")
                        .HasForeignKey("LibraryUserId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Author");

                    b.Navigation("Image");

                    b.Navigation("LibraryUser");
                });

            modelBuilder.Entity("Library.Domain.Entities.Author", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("Library.Domain.Entities.LibraryUser", b =>
                {
                    b.Navigation("TakenBooks");
                });
#pragma warning restore 612, 618
        }
    }
}
